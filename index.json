[{"content":" General Department of Computer Science , NTNU ( Sophomore ) Currently Interesting in developing website Experience GUI : PyQt / Tkinter / GTK Web : p5.js / SCSS / React Data Communication : MQTT / Socket Programming Languages : Python / C / C++ / JavaScript ","date":"4 October 2024","externalUrl":null,"permalink":"/","section":"","summary":"General Department of Computer Science , NTNU ( Sophomore ) Currently Interesting in developing website Experience GUI : PyQt / Tkinter / GTK Web : p5.","title":"","type":"page"},{"content":"","date":"4 October 2024","externalUrl":null,"permalink":"/homeworks/","section":"","summary":"","title":"","type":"homeworks"},{"content":"","date":"4 October 2024","externalUrl":null,"permalink":"/tags/data-structure/","section":"Tags","summary":"","title":"Data Structure","type":"tags"},{"content":" Question 1 (a) # Please show the content in the representation for a polynomial ADT by storing the two polynomials in the same array.\n$a(x) = 4x^6 + 2x^3 + 2x^2 + 3$ $b(x)= 100x^{80} -2x^3 + 5x^2$\nAnswer # Question 1 (b) # How many times of the switch instruction within the while loop will be executed by using the padd() function to add the above two polynomials a(x) and b(x)? Please explain your answer.\nAnswer # According to the padd() function in the picture, we can see that it will keep attaching the highest exponents which hasn\u0026rsquo;t been attached between $a(x)$ and $b(x)$. We can see the switch 0 : It will attach both $a(x)$ and $b(x)$ if the highest exponents of $a(x)$ and $b(x)$ is same.\nOn the other hand, if the highesting exponents of $a(x)$ and $b(x)$ is different, it will attach the higher one.\nWe can see that how the while loop end is when one of the $f(x)$ is completely attached to new matrix.\nTherefore, the total execute time will depends on the amounts of terms in $D(x)$ ($D(x) = a(x) + b(x)$) which $\\ge max(smallest_{exponent}a(x) , smallest_{exponent}b(x))$\nThe remaining terms will be execute after the while loop.\nFor example :\nif $a(x) = 4x^3 + 2x^2 + x$ , $b(x) = 3x^3 + 3x^2 + 3$ then the $max(smallest_{exponent}a(x) , smallest_{exponent}b(x))$ will be $1$ since the smallest exponent of $a(x) = 1$ , $b(x) = 0$\nAccording to my conclusion above, the total execute time will be the amounts of exponents which $\\ge 1$ The amounts of exponents which $\\ge 1$ is $3$\nQuestion 2 (a) # Question 2 (b) # Question 2(c) # Initially, row_begin is set to be 1. Before row_begin is assigned a new value, how many times of the instruction “i = row_begin;” is executed for the given example?\n4 times. Since there are four columns in B which has nonzero elements.\nIf the matrix A is a m * n matrix and matrix B is a n * k matrix, how many times of the instruction “i = row_begin;” is executed?\nSince the question does not imply \u0026ldquo;Before row_begin in assigned a new value\u0026rdquo;, therefore, the answer = numbers of rows in A which has nonzero element * number of cols in B which has nonzero element. Therefore, the answer will be range from $0$ ~ $m*k$.\nQuestion 2(d) # How many times of the instruction “row_begin = i;” is executed for the given example?\n4 times. Since there are four rows in A which has nonzero elements.\nIf the matrix A is a m * n matrix and matrix B is a n * k matrix, how many times of the instruction “row_begin= i;” is executed?\nThe number of rows in A which has nonzero elements. So $max = m , min = 0$\n","date":"4 October 2024","externalUrl":null,"permalink":"/homeworks/data_structure_hw2/data-structure-homework-2/","section":"","summary":"Question 1 (a) # Please show the content in the representation for a polynomial ADT by storing the two polynomials in the same array.","title":"Data Structure Homework 2","type":"homeworks"},{"content":"","date":"4 October 2024","externalUrl":null,"permalink":"/tags/homework/","section":"Tags","summary":"","title":"Homework","type":"tags"},{"content":"","date":"4 October 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"29 September 2024","externalUrl":null,"permalink":"/announcements/","section":"","summary":"","title":"","type":"announcements"},{"content":"","date":"29 September 2024","externalUrl":null,"permalink":"/tags/announcements/","section":"Tags","summary":"","title":"announcements","type":"tags"},{"content":" This is the first record in the first day of website deploy. It is deployed by Netlify. ","date":"29 September 2024","externalUrl":null,"permalink":"/announcements/website/","section":"","summary":"This is the first record in the first day of website deploy.","title":"Website Deploy","type":"announcements"},{"content":" Data Structure Homework 1 # Question 1 : # Use the definition of big-O to prove that $3n^2$ + $2n log_2 n^2 = O(n^ 2 )$. Provide appropriate constants $c$ and $n0$.\nAnswer : # According to the definition of Big-O , if $f(x) \\leq cn^2$ then $f(x) = O(n^2)$ Therefore, while $3n^2$ + $2n log_2 n^2 \\leq cn^2$ , $3n^2$ + $2n log_2 n^2 = O(n^2)$\nIf there is any $c$ satisfied, $3n^2$ + $2n log_2 n^2$ can be proven it is equal to $O(n^2)$\n$3n^2$ + $2n log_2 n^2 \\leq cn^2$\n$= 3n^2$ + $2n * 2log_2 n \\leq cn^2$\n$= 3n^2$ + $4n * log_2 n \\leq cn^2$\n$= 3$ + $(4log_2 n)/n \\leq c$\nSince $(log_2 n)/n \\leq 1$ , $3$ + $(4log_2 n)/n \\leq 7$ Therefore, when $c = 7$ , $3n^2$ + $2n log_2 n^2 \\leq cn^2$ Any $n0$ which satisfy $n \\geq n0$ , $(log_2 n)/n \\leq 1$ can be answer\nIt proves that $3n^2$ + $2n log_2 n^2 \\leq cn^2$ is valid and $c$ , $n0$ = 1. which means $3n^2$ + $2n log_2 n^2 = O(n^2)$\nQuestion 2 : # Show that $4n^3 + 8n^2 + 2^n$ = $Ω ( )$. Please find the maximum order for the big-Ω estimation. Please also provide the values of c and n0 satisfying the definition of the big-Ω estimation.\nAnswer : # According to the definition of Big-Ω ,if $f(x) \\geq c*g(x)$ , $f(x) = Ω(g(x))$ Since the question want maximum order , we can set the $g(x) = $ $2^n$ (It\u0026rsquo;s because that $2^n$ has the maxinum growth speed in $4n^3 + 8n^2 + 2^n$)\n$4n^3 + 8n^2 + 2^n$ $\\geq 2^n$ $= 4n^3/2^n + 8n^2/2^n + 1 \\geq c$ If we set $c = 1$ $n \u0026gt;= 0$ , $4n^3/2^n + 8n^2/2^n + 1 \\geq 1$ Therefore when $c = 1$ , $n0 = 1$ Question 3 : # Please determine a succinct big-Θ expression for the growth of the function $log(n^2) + n^2log(n^4) +1000n^3 + 5000000n$. You don’t have to provide appropriate constants c1, c2, and n0 for the definition. However, please explain how to get your answer.\nAnswer : # According to the definition of Big-Θ ,while $c1g(x) \\geq f(x) \\geq c2g(x)$ , $f(x) = Θ(g(x))$ The professor had told us that we should observe the part which growth fastest in the function while we want to calculate the time complexity of a function $f(x)$, The given function $log(n^2) + n^2log(n^4) +1000n^3 + 5000000n$, we can see that the fastest growth part is $1000n^3$ Therefore, we can set the $g(x)$ to $n^3$\nSince we don\u0026rsquo;t have to provide appropriate constants $c1 , c2 , n0$ Therefore we can set the answer to $Θ(n^3)$,according that $n^3$ growth fastest in the function. Question 4 : # Analyze and give the time complexity of the following program segments in terms of n. Please briefly explain your answer.\n4-1 : # int value = 0; for(int i=0;i\u0026lt;n;i++) for(int j=0;j\u0026lt;i;j++) value += 1; Answer of 4-1 # // code Freq Total Steps int value = 0; 1 1 for(int i=0;i\u0026lt;n;i++) n+1 n+1 for(int j=0;j\u0026lt;i;j++) i+1 ((1+n)*n)/2 + 1 value += 1; 1 ((1+n)*n)/2 Therefore, the time complexity = $((1+n)*n)/2$ = $O(n^2)$\n4-2 : # for (int i = 1; i \u0026lt; n; i++) { i *= k; } Answer of 4-2 # // code Freq Total Steps for (int i = 1; i \u0026lt; n; i++) { logn / logk logn / logk i *= k; 1 logn / logk } Therefore, the time complexity = $logn / logk$ = $O(log_k n)$\n4-3 : # int i, j, k = 0; for (i = n / 2; i \u0026lt;= n; i++) { for (j = 2; j \u0026lt;= n; j = j * 2) { k = k + n / 2; } } Answer of 4-3 # // code Freq Total Steps int i, j, k = 0; for (i = n / 2; i \u0026lt;= n; i++) { (n/2) + 1 (n/2) + 1 for (j = 2; j \u0026lt;= n; j = j * 2) { log(n) log(n)*(n/2) + 1 k = k + n / 2; 1 log(n)*(n/2) } } Therefore, the time complexity = $log(n)*(n/2)$ = $O(nlogn)$\nQuestion 5 # (1) Why when we implement the time complexity (bigO), we usually ignore the coef of n. (Example : we imply $O(n^2)$ but not $O(5n^2)$)? (2) If there is a function $5n^3+4n+2$,Why we usually imply its time complexity as $O(n^3)$ but not $O(n ^3+n)$?\nAnswer # (1) The main reason is when we calculate the time complexity, while the n growth to a very large number, the coef will not affect the time complexity much. For example, if a function\u0026rsquo;s time complexity is $O(n^2)$ , it doesn\u0026rsquo;t really matter it is $5n^2$ or $n^2$ while n is large. On the other hand, the main goal when we imply the time complexity is to estimate the efficiency of a function, not the precious number. Therefore, while we are estimating Big-O notation, the important part is the growth speed, not the coef. (2) The main reason is the growth speed of $n^3$ is too fast. Therefore, while $n$ changes, $n^3$ grow too fast compared to other part of function. We can ignore the part of the function which grow slower since it doesn\u0026rsquo;t affect the whole time speed a lot. There is an important knowledge between these two question, which we should focus on the time efficiency but not the precious number of the function when we are estimating the time complexity of an algorithm.\n","date":"22 September 2024","externalUrl":null,"permalink":"/homeworks/data_structure_hw1/","section":"","summary":"Data Structure Homework 1 # Question 1 : # Use the definition of big-O to prove that $3n^2$ + $2n log_2 n^2 = O(n^ 2 )$.","title":"Data Structure Homework 1","type":"homeworks"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/side_projects/","section":"","summary":"","title":"","type":"side_projects"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/tags/gui/","section":"Tags","summary":"","title":"GUI","type":"tags"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/tags/mqtt/","section":"Tags","summary":"","title":"MQTT","type":"tags"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/tags/pyqt/","section":"Tags","summary":"","title":"PyQt","type":"tags"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/tags/side-project/","section":"Tags","summary":"","title":"Side Project","type":"tags"},{"content":" TPTRS-MQTT # TPTRS-MQTT is a project written with PyQt5 and MQTT server, the final project of Data Science \u0026amp; Communication 2024 NTNU. The default setting of the MQTT broker located at NTNU(National Taiwan Normal University), however we can\u0026rsquo;t assume that the MQTT broker will keep working after the course ended.\nTo run the server with your own MQTT broker, edit the IP address in server.py and client_mqtt.py.\nHow to run the project # Execute client.py and server.py in ./src/ You can modify IP address to your own broker.\nFunctions # Check current (real-time) UBike parking space and available bikes. Calculate nearest UBike/Bus/MRT stations in crow-flight distance. Interactive Map for searching stations in Taipei City and New Taipei City User-Friendly GUI PyQt5 # Web Engine for interacting Folium Map Graphic User Interface for better experience Select Language options for different language users ( English , Traditional Chinese , Japanese(partial) ) Folium # Support OpenStreetMap and other tiles. automatically generate markers from real-time api data MarkerCluster and markers for MRT, bus, and Ubike stations MQTT # MQTT server for clients to interact data Support localhost and MQTT brokers Screenshots # ","date":"15 August 2024","externalUrl":null,"permalink":"/side_projects/tptrs-mqtt/","section":"","summary":"TPTRS-MQTT # TPTRS-MQTT is a project written with PyQt5 and MQTT server, the final project of Data Science \u0026amp; Communication 2024 NTNU.","title":"TPTRS-MQTT","type":"side_projects"},{"content":"","date":"16 June 2024","externalUrl":null,"permalink":"/tags/c/","section":"Tags","summary":"","title":"C","type":"tags"},{"content":"","date":"16 June 2024","externalUrl":null,"permalink":"/tags/http.server/","section":"Tags","summary":"","title":"http.server","type":"tags"},{"content":"Interactive-Fiction-Engine.c is a repo which can easily transfer your idea into a website with animations. It was the final project of computer programming II in NTNU, and we improve it into a website generator.\nBasically, users can easily make a http-server based website with just a script wriiten by user.\nScreenshots below are the example game written by us.\nThe design of the engine\n","date":"16 June 2024","externalUrl":null,"permalink":"/side_projects/interactive-fiction-enginec/","section":"","summary":"Interactive-Fiction-Engine.c is a repo which can easily transfer your idea into a website with animations.","title":"Interactive-Fiction-Engine.c","type":"side_projects"},{"content":" Discord gmail notification webhook # GitHub Repo\nFeature # Send webhook embed message while your email recieve new mail. Requirement # Google Applications password\nhttps://myaccount.google.com/apppasswords Python3 24/7 device for running python script.\nNotice # All of your mails will be marked as read after you run the script. You can easily just modify the code for multiple account/gmail.\n","date":"3 June 2024","externalUrl":null,"permalink":"/side_projects/discord-gmail_notification/","section":"","summary":"Discord gmail notification webhook # GitHub Repo","title":"Discord gmail notification webhook","type":"side_projects"},{"content":"","date":"3 June 2024","externalUrl":null,"permalink":"/tags/discord.py/","section":"Tags","summary":"","title":"discord.py","type":"tags"},{"content":" Game Programming Final Project # No Commercial Use Online Game Overview # Game Programming is a general course for NTNU\u0026#39;s students learn how to code and how to create your own game. This repo is the final project we made when we took the course. Lang # p5.js (html + css + js) Local Deployment # Download the responsitory and run index.html Map Setting # Green : minigames Yellow : Random events Blue : Knowledge supplyment Orange : Quiz (The color may be different from the usual game, however, the setting remain the same) Contributors # Contributor List： Coding Group: 41247001S 盧昱安 GitHub : NaoCoding 41247024S 廖妤恩 Team Leader Content Creator: 41247057S 陳育渝 41211011E 鐘珮甄 41211016E 羅崇愷 Art Design: 41241121S 李亞倫 41272002H 鄭鈺樺 ","date":"1 June 2024","externalUrl":null,"permalink":"/side_projects/ntnu_gameprogramming_finalproject/","section":"","summary":"Game Programming Final Project # No Commercial Use Online Game Overview # Game Programming is a general course for NTNU\u0026#39;s students learn how to code and how to create your own game.","title":"NTNU_GameProgramming_FinalProject","type":"side_projects"},{"content":"","date":"1 June 2024","externalUrl":null,"permalink":"/tags/p5.js/","section":"Tags","summary":"","title":"p5.js","type":"tags"},{"content":"","date":"1 June 2024","externalUrl":null,"permalink":"/tags/website/","section":"Tags","summary":"","title":"Website","type":"tags"},{"content":" 2023-NTNU-CP1 Code # GitHub Repo\nThis repository is all about CP1(Computer Programming 1 aka 程設一), which is the course for freshman to learn how to program in C from NTNU. All of the code are published after the semester was ended, so don\u0026#39;t afraid about cheating issues.(However, it is forbidden to use my code in future\u0026#39;s CP1). Thanks all TAs and neokent for giving us a fun and memorable course. There are five homework and two online exam during CP1 in 2023 Fall Semester. And below are my scores, questions which I didn\u0026#39;t get full score should not consider my file as best/good answer. Some homeworks were fun or special, such as diceroller in hw3, I made a gtk user interface. Hw1 : 20 20 15 20 18 5, sum : 98/105 Hw2 : 20 18 20 18 18 5, sum : 99/105 Hw3 : 14 17 20 20 20 0 0 (forgot to upload bonus....) , sum : 91/110 Midterm : 20 20 13 8 12 5, sum : 78/105 Hw4 : 20 20 20 19 16.9 5, sum : 100.9/105 Hw5 : 17 16 16 20 20 5, sum : 94/105 Final : 8 13 5 50(52, but max was 50) 5, sum : 81/105 Final Score : 102.78(92.78 original) (A+) By Andy Lu 2024/03/12 Another good example from my classmate, Darrin Lin He also got A+ in CP1 course, it is recommended to watch his example. https://github.com/Darrin-Lin/NTNU_CSIE_ComputerProgramming_I Hw1 Link Hw2 Link Hw3 Link Midterm Link Hw4 Link Hw5 Link Final Link ","date":"26 December 2023","externalUrl":null,"permalink":"/homeworks/computer_programmingi/","section":"","summary":"2023-NTNU-CP1 Code # GitHub Repo","title":"Computer Programming I","type":"homeworks"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]